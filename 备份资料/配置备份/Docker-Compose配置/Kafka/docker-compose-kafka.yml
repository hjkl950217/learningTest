version: '3.3'
#创建子网 docker network create --subnet 172.19.0.0/16 --gateway 172.19.0.1 zookeeper_kafka

#测试kafka
#1-创建topic
#输入docker exec -it kafka0 bash 进入kafka0容器，并执行如下命令创建topic
#注:不同版本的版本号不同
#cd /opt/kafka_2.13-2.6.0/bin/
#./kafka-topics.sh --create --topic chat --partitions 5 --zookeeper zookeeper:2181 --replication-factor 3

#2-开启生产者
#./kafka-console-producer.sh --broker-list kafka0:9092 --topic chat

#3-开启消费者
#开启另一个shell界面进入kafka2容器，进入kafka的bin目录下并执行下列命令开启消费者
#./kafka-console-consumer.sh --bootstrap-server kafka2:9094 --topic chat --from-beginning

#4-输入信息看是否正常
#回到生产者shell，此时应该还在输入状态
#输入信息 看消费者shell里有没有回应
#./kafka-console-producer.sh --broker-list kafka0:9092 --topic chat


services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    container_name: zookeeper
    networks:
      default:
        ipv4_address: 172.19.0.11
        

  kafka0:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka0
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 0
    volumes:
      - /root/data/kafka0/data:/data0
      - /root/data/kafka0/log:/datalog0
    networks:
      default:
        ipv4_address: 172.19.0.12


  kafka1:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka1
    ports:
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    volumes:
      - /root/data/kafka1/data:/data1
      - /root/data/kafka1/log:/datalog1
    networks:
      default:
        ipv4_address: 172.19.0.13


  kafka2:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka2
    ports:
      - 9094:9094
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
    volumes:
      - /root/data/kafka2/data:/data2
      - /root/data/kafka2/log:/datalog2
    networks:
      default:
        ipv4_address: 172.19.0.14


  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    restart: unless-stopped
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - "9000:9000"
    links:            # 连接本compose文件创建的container
      - kafka0
      - kafka1
      - kafka2
    external_links:   # 连接本compose文件以外的container
      - zookeeper
    environment:
      ZK_HOSTS: zoo1:2181                 ## 修改:宿主机IP
      TZ: CST-8

networks:
  default:
    external:
      name: zookeeper_kafka