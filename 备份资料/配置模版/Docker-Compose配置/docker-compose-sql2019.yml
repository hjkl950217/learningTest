#官方配置文件说明：https://docs.docker.com/compose/compose-file/
#官方docker-compose cli的说明：https://docs.docker.com/compose/reference/overview/
#检测配置文件命令：docker-compose config
#非集群模式下以资源限制的方式式启动：docker-compose --compatibility up -d

#创建时报无效名字：文件路径不能有中文。 原因是compose会基于当前文件名的名字创建容器名，如果有中文会生成"_xx"的名字，第一个字符只能是字母或数字，导致报错。

version: '3.7'
services:
  
  mssql2019: #服务名字
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - "1433:1433" #端口 模式1:8080 主机随机->8080  模式2: 8080:8080 主机8080->8080 
    environment: #设置容器内的环境变量 会覆盖镜像中的环境变量
      - ACCEPT_EULA=Y
      - SA_PASSWORD=1234ABCD.
    #expose:
      #- "80" #在不向主机发布端口的情况下公开端口 - 链接的服务只能访问这些端口。只能指定内部端口。 
    network_mode: "bridge" #网络模式 bridge、host、none、service:[service name]
    volumes: #卷配置 相当于配置硬盘
      - type: bind #安装类型 
        source: ./sqlData
        target: /tmp/sqlData
    deploy: #部署配置
        resources: #资源限制
            limits: #配置极限允许的资源
                cpus: '1'
                memory: 500M
            reservations: #配置要申请的资源
                cpus: '0.5'
                memory: 200M

  #seller-web:
    #image: "10.16.78.88/marketplace/mkpl-seller-service:develop-20200320061732"
    #ports:
     # - "8080"
    #network_mode: "bridge"
    
  #nginx:
    #image: "a.newegg.org/newegg-docker/library/nginx:latest"
    #volumes: #卷配置 相当于配置硬盘
      #- type: bind #安装类型 
        #source: ./nginx.conf
        #target: /etc/nginx/nginx.conf
        #read_only: true #将卷设置为只读
        
    #depends_on: #表达服务之间的依赖性 配置后依赖docker提供的dns能力，可以访问如 rma-web:8080 rma-web:{动态端口} 一类的地址
      #- rma-web
    #ports:
      #- "80:80"
    #environment: #设置容器内的环境变量 会覆盖镜像中的环境变量
      #- NGINX_HOST=foobar.com
      #- NGINX_PORT=80