这一层存放引用类型的使用情况。比如原本是实体类，包装成引用值对象

后缀带Entity的，表示为传统实体类(只有属性，定义结构的类)
后缀不带Entity的，表示包装之后的引用值对象。

为什么定义2个呢？

	因为合在一起，将无法创建对象。构造方法(Create方式同理)中要求传递自己，这样永远不能通过业务检查。

为什么采用实体类+泛型值对象来使用定义引用值对象呢？有其它方式么？

	尝试过其它方式，折中采用了这种方式，缺点是使用时每次要调用.value。
	尝试过继承，继承的方式无法创建实体。如果继承方式不走构造方法创建，可能违背“创建即业务正确”的理念

继承方式的详细说明：
	1.定义实体类.这个类定义有什么属性，结构是什么样子。（定义结构）
	2.定义值对象类.泛型类型即为刚才定义的实体类。 这个类完成业务验证与枚举属性的代码。(定义业务检查)



